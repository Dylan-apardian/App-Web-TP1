/*!
 * Module dependencies.
 */

<<<<<<< HEAD
'use strict';

const MongooseError = require('./');


/**
 * The connection failed to reconnect and will never successfully reconnect to
 * MongoDB without manual intervention.
 * @api private
 */
class DisconnectedError extends MongooseError {
  /**
   * @param {String} connectionString
   */
  constructor(connectionString) {
    super('Ran out of retries trying to reconnect to "' +
      connectionString + '". Try setting `server.reconnectTries` and ' +
      '`server.reconnectInterval` to something higher.');
  }
}

Object.defineProperty(DisconnectedError.prototype, 'name', {
  value: 'DisconnectedError'
});
=======
var MongooseError = require('./');

/**
 * Casting Error constructor.
 *
 * @param {String} type
 * @param {String} value
 * @inherits MongooseError
 * @api private
 */

function DisconnectedError(connectionString) {
  MongooseError.call(this, 'Ran out of retries trying to reconnect to "' +
    connectionString + '". Try setting `server.reconnectTries` and ' +
    '`server.reconnectInterval` to something higher.');
  this.name = 'DisconnectedError';
  if (Error.captureStackTrace) {
    Error.captureStackTrace(this);
  } else {
    this.stack = new Error().stack;
  }
}

/*!
 * Inherits from MongooseError.
 */

DisconnectedError.prototype = Object.create(MongooseError.prototype);
DisconnectedError.prototype.constructor = MongooseError;

>>>>>>> 67dff727551b6248efacc127c2432d1747d92b89

/*!
 * exports
 */

module.exports = DisconnectedError;
